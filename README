---+ Thea2 : Prolog Modules for OWL2

This is a collection of modules for parsing and manipulating OWL2
ontologies in Prolog. It is developed with SWI-Prolog in mind, but the
goal is to maximize portability with other prologs, such as Yap and
XSB.

This module is currently in alpha status - aspects may change
radically!

---++ Overview

The model is based on Structural Specification and Functional-Style
Syntax for OWL2 (http://www.w3.org/TR/owl2-syntax), and can be found
in owl2_model.pl

Predicates such as subClassOf/2 can be used to query in-memory axioms

There are a variety of surface forms for OWL2. The goal is to
eventually support all of these for both parsing and writing. So far
we have (incomplete) parsers for:

* RDF - owl2_from_rdf.pl
* OWL-XML - owl2_xml.pl

We also allow for reading and writing from prolog factfiles

---++ SWRL support

The module swrl.pl provides support for the Semantic Web Rules Language

SWRL rules are treated as axioms, extending owl2_model.pl

In addition, we allow for representation of rules as prolog terms and
prolog programs - there is a partial converter from prolog programs to
OWL2+SWRL

---++ Reasoning support

The DLP subset of OWL2-DL can be translated to logic programs using a
transormation defined by Grosof. This part of Thea1 has still to be
moved here.

There is also a very partial TBox reasoner in owl2_reasoner.pl, and an
ad-hoc reasoner in owl2_basic_reasoner.pl that can be used with a
non-tabled prolog such as SWI; however, this gives incomplete results.

The DIG interface from Thea1 has yet to be converted

We would also like to allow interfacing with reasoners via the java
OWLAPI. A very early prototype exists in owl2_owlapi_java.pl

---++ Utilities

Currently the owl2_util.pl is a grab-bag of ad-hoc utility
predicates. Use this to sample the functionality

---++ Relationship to SWI-Prolog SemWeb Library

Currently we use rdf_db.pl to translate from OWL RDF-XML to OWL
axioms. This 'consumes' the triples in the RDF database. Eventually we
would like a dynamic view over an RDF database, although this will be
difficult due to the non-monotonic nature of the mapping between RDF
and OWL.

---++ History

This module is a continuation of Thea1, developed by VV
